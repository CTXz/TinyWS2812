#!/bin/bash

#
# Copyright (C) 2021  Patrick Pedersen

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# 
# Author: Patrick Pedersen <ctx.xda@gmail.com>
# Brief description: Script to generate a customized doxygen web documentation
# Detailed description:
#       The following script has been made out of the necessity to support
#       struct definitions for multiple platforms in docs generated by doxygen.
#       It is done by first generating multiple doxygen references for platform
#       specific files, then generating a full doxygen web documentation,
#       and lastly, filling the references with the content obtained from the
#       platform specific doxygen refrences.
#
#       PS: I am aware that this is a very ugly hack, and can easily break on
#           doxygen updates, however I have not found a way to solve this issue
#           with the custimization options provided by doxygen.
#
#       PS PS: My sed and regex skills have become very rusty and I do not have
#              the time nor the motivation to relearn all of this crap properly
#              again. Sorry.

# Target Platforms
declare -a PLATFORMS=(
        "AVR"
        "ARDUINO_AVR"
)

DOCS_URL="https://ctxz.github.io/TinyWS2812/"

# run_doxygen
# Description:
#       This is a function because dealing with quotes is a pain.
#       http://stackoverflow.com/a/2705678/120999
# Parameters:
#       $1 - Predefines(s)
function unregex {
        _RETURN="$(echo "$1" | sed -e 's/[]\/()$*.^|[]/\\&/g')"
}

# run_doxygen
# Description:
#       Executes doxygen with the provided
#       predefines and input paths
# Parameters:
#       $1 - Predefines(s)
#       $2 - Input path(s)
#       $3 - Generate XML (YES | NO)
function run_doxygen()
{
        DOXYGEN_PREDEFINED="$1" DOXYGEN_INPUT="$2" DOXYGEN_XML="$3" doxygen "Doxyfile" > /dev/null 2>&1
}

# struct_get_detailed_description
# Description:
#       Fetches the detailed description of a given struct reference
# Parameters:
#       $1 - Path to struct reference file
function struct_get_detailed_description()
{
        # Get detailed description from first platform (description is same for every platform)
        run_doxygen "WS2812_TARGET_PLATFORM_${PLATFORMS[0]}" "include/ws2812.h" "NO"

        detailed_description="$(pcregrep -M "<a name=\"details\" id=\"details\"></a><h2 class=\"groupheader\">Detailed Description</h2>.*(\n|.)*<hr/>The documentation for this struct was generated from the following file:<ul>" $1)"
        detailed_description="$(echo "$detailed_description" | tr -d '\n')"
        detailed_description="$(echo "$detailed_description" | sed 's/<hr\/>The documentation for this struct was generated from the following file:<ul>//g')"
        
        _RETURN="$detailed_description"
}

# struct_get_public_attributes
# Description:
#       Fetches the public attributes of a struct reference
#       for a specific target platform
# Parameters:
#       $1 - Platform
#       $2 - Path to struct reference file
function struct_get_public_attributes()
{
        run_doxygen "WS2812_TARGET_PLATFORM_$1" "include/ws2812.h" "NO"
        public_attributes="$(pcregrep -M "<table class=\"memberdecls\">.*(\n|.)*</table>" $2)"
        public_attributes="$(echo "$public_attributes" | tr -d '\n')"
        _RETURN="$public_attributes"
}

# struct_get_members
# Description:
#       Fetches the struct members list for a specific 
#       target platform
# Parameters:
#       $1 - Platform
#       $2 - Path to members list
function struct_get_members()
{
        run_doxygen "WS2812_TARGET_PLATFORM_$1" "include/ws2812.h" "NO"
        members="$(pcregrep -M "<table class=\"directory\">.*(\n|.)*</table>" $2)"
        members="$(echo "$members" | tr -d '\n')"
        members="$(echo "$members" | sed 's/<\/div><!-- contents -->//g')"     
        _RETURN="$members"
}

# generate_platforms_refs
# Description:
#       Generates a list of platform references
# Parameters
#       $1 - Top HR style
#       $2 - Bottom HR style
function generate_platforms_refs ()
{
        list=""

        for platform in "${PLATFORMS[@]}"; do
                list+="<li><a href=\"#platform-$platform\" style=\"font-size: large;\">$platform</a></li>"
        done

        platform_refs="<hr style='$1;'>"

read -r -d '' tmp << EOM
        <div class="platform-hrefs">
        <h1>Platforms</h1>
        <ul>
EOM
        platform_refs+="$tmp"
        platform_refs+=$list
read -r -d '' tmp << EOM
        </ul> 
        </div>
EOM
        platform_refs+="$tmp"
        platform_refs+="<hr style='$2;'>"
        platform_refs="$(echo "$platform_refs" | tr -d '\n')"

        _RETURN="$platform_refs"
}

# generate_title
# Description:
#       Generates a referenceable title for
#       a target platform
# Parameters
#       $1 - Platform
#       $2 - Style
function generate_title()
{
        platform_title="<h1 style=\"$2\" id=\"platform-$1\">$1</h1>"
        _RETURN="$platform_title"
}

### MAIN ###

# cd into project root
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
PROJECT_ROOT="$DIR/.."
cd "$PROJECT_ROOT"

rm -rf "doxygen/"

## Generate README from mainpage

# Generate readme.md using doxybook2
tmp=/tmp/TinyWS2812_doxybook
run_doxygen "" "readme.dox" "YES"
mkdir "$tmp"
doxybook2 --input doxygen/xml --templates "doxybook_templates/" --output "$tmp" >> /dev/null 2>&1
mv "$tmp/indexpage.md" readme.md 
rm -r "$tmp"

# Fix references
sed -i "s|\(\[.*\](\)|\1$DOCS_URL|" readme.md

# Fix lists lacking a linebreak at end
grep -A1 '^\* .*$' readme.md | grep -v '\-\-\|^\* .*$' | while read -r line; do
        unregex "$line"
        sed -i "\|$_RETURN|i \ " readme.md
done

## The following code alters the ws2812_cfg struct reference to display
## a refrence for all platform specific variations

# Generate a list of platform references
generate_platforms_refs "margin-top: 30px" ""
PLATFORM_REFS="$_RETURN"

# Get detailed description of the ws2812_cfg struct
struct_get_detailed_description "doxygen/html/structws2812__cfg.html"
WS2812_CFG_DETAILED_DESCRIPTION="$_RETURN"

# Generate platformless reference for ws2812.h
run_doxygen "" "include/ws2812.h" "NO"

# Create a modifiable copy of the struct reference
# so that get functions don't interfere with changes
MOD_STRUCT_REF="/tmp/structws2812__cfg.html"
cp "doxygen/html/structws2812__cfg.html" "$MOD_STRUCT_REF"

# Create a modifiable copy of the struct member reference
MOD_MEMBER_REF="/tmp/structws2812__cfg-members.html"
cp "doxygen/html/structws2812__cfg-members.html" "$MOD_MEMBER_REF"

## Modify Struct Reference

END='<\/div><hr\/>The documentation for this struct was generated from the following file:<ul>'

sed -i "/<table class=\"memberdecls\">/i $WS2812_CFG_DETAILED_DESCRIPTION" "$MOD_STRUCT_REF" # Move detailed description to top
sed -i "/<table class=\"memberdecls\">/i $PLATFORM_REFS" "$MOD_STRUCT_REF" # Add list of platform references
sed -ie "/<table class=\"memberdecls\">/,/$END/d" "$MOD_STRUCT_REF" # Delete public attributes as we will replace those with platform specific ones

# Insert platform specific public attributes
for platform in "${PLATFORMS[@]}"; do
        generate_title "$platform" "margin-bottom: 0px; margin-top: 30px;"
        title="$_RETURN"

        struct_get_public_attributes "$platform" "doxygen/html/structws2812__cfg.html"
        public_attributes="$_RETURN"

        sed -i "/<li>include\/<a class=\"el\"/i $title" "$MOD_STRUCT_REF"
        sed -i "/<li>include\/<a class=\"el\"/i $public_attributes" "$MOD_STRUCT_REF"
done

sed -i "/<li>include\/<a class=\"el\"/i$END" "$MOD_STRUCT_REF" # Fix missing footer part

## Modify Struct Member List

sed -i "/<p>This is the complete list of members for <a class=\"el\" href=/a $PLATFORM_REFS" "$MOD_MEMBER_REF" # Add list of platform references
sed -ie "/<table class=\"directory\">/,/<\/table>/d" "$MOD_MEMBER_REF" # Delete memebers as we will replace those with platform specific ones

# Insert platform specific member lists
for platform in "${PLATFORMS[@]}"; do
        generate_title "$platform" "margin-bottom: 15px; margin-top: 30px;"
        title="$_RETURN"

        struct_get_members "$platform" "doxygen/html/structws2812__cfg-members.html"
        members="$_RETURN"

        sed -i "/<!-- start footer part -->/i $title" "$MOD_MEMBER_REF"
        sed -i "/<!-- start footer part -->/i $members" "$MOD_MEMBER_REF"
done

sed -i "/<!-- start footer part -->/i<br>" "$MOD_MEMBER_REF" # Add line break for nice look (opinion)
sed -i "/<!-- start footer part -->/i<\/div><!-- contents -->" "$MOD_MEMBER_REF" # Fix missing footer part

## Generate docs and replace ws2812_cfg reference with the modified version

defines=""
for platform in "${PLATFORMS[@]}"; do
        defines+=" WS2812_TARGET_PLATFORM_$platform"
done

# Generate docs for all platforms
run_doxygen "$defines" "src/ include/ examples/ readme.dox" "NO"

# Replace ws2812_cfg reference wiht modified version 
mv "$MOD_STRUCT_REF" "doxygen/html/structws2812__cfg.html"
mv "$MOD_MEMBER_REF" "doxygen/html/structws2812__cfg-members.html"

# Move doxygen HTML output to docs/ so that it can be accessed from github pages
rm -r docs/
mv doxygen/html docs/ 

rm -r doxygen

echo "makedocs: Done"